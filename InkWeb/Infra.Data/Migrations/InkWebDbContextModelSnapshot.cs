// <auto-generated />
using System;
using Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infra.Data.Migrations
{
    [DbContext(typeof(InkWebDbContext))]
    partial class InkWebDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Scheduling", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("ConfirmService")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateService")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schedulings");
                });

            modelBuilder.Entity("Domain.Entities.Tattoo", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BodyLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchedulingId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SizeTattoo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SchedulingId");

                    b.ToTable("Tattoos");
                });

            modelBuilder.Entity("Domain.Entities.Tattoo", b =>
                {
                    b.HasOne("Domain.Entities.Scheduling", "Scheduling")
                        .WithMany("Tattoos")
                        .HasForeignKey("SchedulingId");

                    b.Navigation("Scheduling");
                });

            modelBuilder.Entity("Domain.Entities.Scheduling", b =>
                {
                    b.Navigation("Tattoos");
                });
#pragma warning restore 612, 618
        }
    }
}
